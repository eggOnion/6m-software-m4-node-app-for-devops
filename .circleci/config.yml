version: 2.1

# orb provides a predfined configurations for a specific environment; node & docker for our case
orbs:
  node: circleci/node@5.0.1
  docker: circleci/docker@2.1.4

# This job uses a Docker image: "cimg/node:16.10" to build a Node.js application. 
jobs:
  build:   
    docker:
      - image: cimg/node:16.10
    steps:
      ## This checkout command fetch the source code once the commit is executed on Github.
      ## It then continue to installs npm packages, and runs the npm install command.
      - checkout      
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo "Installing dependencies...."
          npm install 
          
  # This job also uses a Docker image (cimg/node:16.10). 
  # The checkout command command fetch the source code once the commit is executed on Github.
  # !!* Sets up remote Docker -> allows the Docker command to run in circleci
  # installs npm packages, runs tests using npm run test
  test:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout      
      - node/install-packages:
          pkg-manager: npm
      - run: |
          echo "Running tests...."
          npm run test      
  optional_publish:
      # Assignments

  # Specify your tag pattern using wildcards
  semantic-version-check:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout   
      - run:
          name: Check for Semantic Versioning
          command: |
            TAG_PATTERN="v3.3.3"  
            if git tag -l $TAG_PATTERN 2>/dev/null; then
              echo "Git tag matching pattern found. Proceeding with the build..."
            else
              echo "No Git tag matching pattern found. Exiting..."
              circleci step halt
              circleci step halt
            fi
            circleci step halt
            echo "Semantic Jobs must reach here for full completion!"
  
  build-and-push:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout            
      - setup_remote_docker      
      - run:
          name: Log in to Docker Hub
          command: echo $DOCKERHUB_TOKEN | docker login -u $DOCKERHUB_USERNAME --password-stdin        
      - run:
          name: Build and Push Docker Image.
          command: |
            docker build -t $DOCKERHUB_USERNAME/build-and-push:latest_v2 .
            docker push $DOCKERHUB_USERNAME/build-and-push:latest_v2
    
  deploy-to-Heroku:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout     
      - run: 
          name: Deploying to Heroku
          command: echo "Deploying to Heroku..."

# workflows: simple_workflow  -> *the name of the workflow
# This workflow consists of two jobs: build and test. 
# The test job "requires" the build job to complete successfully before it can run. 
# This represents a basic CI/CD workflow where the application is built and tested.
workflows:
  simple_workflow:    
    jobs:
      - build:
          filters: 
            branches:     
              only:
                - main      # build the ci pipeline only when git push to main branch            
      - test:
          requires:
            - build      
      - semantic-version-check:
          requires:
            - test
          filters:
            tags:
              only: /.*/     # enfore git tag to match this version
                # ^v10\.0\.0/     
                #- /.*/                  
      - build-and-push:
          requires:
            - semantic-version-check          
      - deploy-to-Heroku:
          requires:
            - build-and-push



# In summary, this CircleCI configuration defines a basic workflow for a Node.js application, involving 
# building and testing using Docker images. The success of the workflow depends on the successful completion 
# of the build job before the test job can run